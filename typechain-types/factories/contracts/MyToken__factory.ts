/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyToken, MyTokenInterface } from "../../contracts/MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040518060400160405280600781526020017f4d79546f6b656e00000000000000000000000000000000000000000000000000815250806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b00000000000000000000000000000000000000000000000000000000008152508160039081620000fd91906200056f565b5080600490816200010f91906200056f565b50505062000128600583620001c960201b90919060201c565b610120818152505062000146600682620001c960201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620001856200022160201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505062000879565b6000602083511015620001ef57620001e7836200027e60201b60201c565b90506200021b565b826200020183620002eb60201b60201c565b60000190816200021291906200056f565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e05161010051463060405160200162000263959493929190620006c7565b60405160208183030381529060405280519060200120905090565b600080829050601f81511115620002ce57826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401620002c59190620007b3565b60405180910390fd5b805181620002dc9062000809565b60001c1760001b915050919050565b6000819050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037757607f821691505b6020821081036200038d576200038c6200032f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003f77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003b8565b620004038683620003b8565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004506200044a62000444846200041b565b62000425565b6200041b565b9050919050565b6000819050919050565b6200046c836200042f565b620004846200047b8262000457565b848454620003c5565b825550505050565b600090565b6200049b6200048c565b620004a881848462000461565b505050565b5b81811015620004d057620004c460008262000491565b600181019050620004ae565b5050565b601f8211156200051f57620004e98162000393565b620004f484620003a8565b8101602085101562000504578190505b6200051c6200051385620003a8565b830182620004ad565b50505b505050565b600082821c905092915050565b6000620005446000198460080262000524565b1980831691505092915050565b60006200055f838362000531565b9150826002028217905092915050565b6200057a82620002f5565b67ffffffffffffffff81111562000596576200059562000300565b5b620005a282546200035e565b620005af828285620004d4565b600060209050601f831160018114620005e75760008415620005d2578287015190505b620005de858262000551565b8655506200064e565b601f198416620005f78662000393565b60005b828110156200062157848901518255600182019150602085019450602081019050620005fa565b868310156200064157848901516200063d601f89168262000531565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b6200066b8162000656565b82525050565b6200067c816200041b565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006af8262000682565b9050919050565b620006c181620006a2565b82525050565b600060a082019050620006de600083018862000660565b620006ed602083018762000660565b620006fc604083018662000660565b6200070b606083018562000671565b6200071a6080830184620006b6565b9695505050505050565b600082825260208201905092915050565b60005b838110156200075557808201518184015260208101905062000738565b60008484015250505050565b6000601f19601f8301169050919050565b60006200077f82620002f5565b6200078b818562000724565b93506200079d81856020860162000735565b620007a88162000761565b840191505092915050565b60006020820190508181036000830152620007cf818462000772565b905092915050565b600081519050919050565b6000819050602082019050919050565b600062000800825162000656565b80915050919050565b60006200081682620007d7565b826200082284620007e2565b90506200082f81620007f2565b9250602082101562000872576200086d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802620003b8565b831692505b5050919050565b60805160a05160c05160e051610100516101205161014051611dc0620008d46000396000610b3801526000610afd015260006110cf015260006110ae01526000610976015260006109cc015260006109f50152611dc06000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a0712d6811610066578063a0712d6814610290578063a9059cbb146102ac578063d505accf146102dc578063dd62ed3e146102f8576100f5565b806370a08231146101ee5780637ecebe001461021e57806384b0196e1461024e57806395d89b4114610272576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce567146101965780633644e515146101b457806342966c68146101d2576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610328565b60405161010f91906115bc565b60405180910390f35b610132600480360381019061012d9190611677565b6103ba565b60405161013f91906116d2565b60405180910390f35b6101506103dd565b60405161015d91906116fc565b60405180910390f35b610180600480360381019061017b9190611717565b6103e7565b60405161018d91906116d2565b60405180910390f35b61019e610416565b6040516101ab9190611786565b60405180910390f35b6101bc61041f565b6040516101c991906117ba565b60405180910390f35b6101ec60048036038101906101e791906117d5565b61042e565b005b61020860048036038101906102039190611802565b61043b565b60405161021591906116fc565b60405180910390f35b61023860048036038101906102339190611802565b610483565b60405161024591906116fc565b60405180910390f35b610256610495565b6040516102699796959493929190611937565b60405180910390f35b61027a61053f565b60405161028791906115bc565b60405180910390f35b6102aa60048036038101906102a591906117d5565b6105d1565b005b6102c660048036038101906102c19190611677565b6105de565b6040516102d391906116d2565b60405180910390f35b6102f660048036038101906102f19190611a13565b610601565b005b610312600480360381019061030d9190611ab5565b610749565b60405161031f91906116fc565b60405180910390f35b60606003805461033790611b24565b80601f016020809104026020016040519081016040528092919081815260200182805461036390611b24565b80156103b05780601f10610385576101008083540402835291602001916103b0565b820191906000526020600020905b81548152906001019060200180831161039357829003601f168201915b5050505050905090565b6000806103c56107d0565b90506103d28185856107d8565b600191505092915050565b6000600254905090565b6000806103f26107d0565b90506103ff8582856107ea565b61040a85858561087e565b60019150509392505050565b60006012905090565b6000610429610972565b905090565b6104383382610a29565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061048e82610aab565b9050919050565b6000606080600080600060606104a9610af4565b6104b1610b2f565b46306000801b600067ffffffffffffffff8111156104d2576104d1611b55565b5b6040519080825280602002602001820160405280156105005781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60606004805461054e90611b24565b80601f016020809104026020016040519081016040528092919081815260200182805461057a90611b24565b80156105c75780601f1061059c576101008083540402835291602001916105c7565b820191906000526020600020905b8154815290600101906020018083116105aa57829003601f168201915b5050505050905090565b6105db3382610b6a565b50565b6000806105e96107d0565b90506105f681858561087e565b600191505092915050565b8342111561064657836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161063d91906116fc565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106758c610bec565b8960405160200161068b96959493929190611b84565b60405160208183030381529060405280519060200120905060006106ae82610c43565b905060006106be82878787610c5d565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461073257808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610729929190611be5565b60405180910390fd5b61073d8a8a8a6107d8565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6107e58383836001610c8d565b505050565b60006107f68484610749565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108785781811015610868578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161085f93929190611c0e565b60405180910390fd5b61087784848484036000610c8d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108f05760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108e79190611c45565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109625760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109599190611c45565b60405180910390fd5b61096d838383610e64565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156109ee57507f000000000000000000000000000000000000000000000000000000000000000046145b15610a1b577f00000000000000000000000000000000000000000000000000000000000000009050610a26565b610a23611089565b90505b90565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9b5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a929190611c45565b60405180910390fd5b610aa782600083610e64565b5050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610b2a60057f000000000000000000000000000000000000000000000000000000000000000061111f90919063ffffffff16565b905090565b6060610b6560067f000000000000000000000000000000000000000000000000000000000000000061111f90919063ffffffff16565b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bdc5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bd39190611c45565b60405180910390fd5b610be860008383610e64565b5050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000610c56610c50610972565b836111cf565b9050919050565b600080600080610c6f88888888611210565b925092509250610c7f8282611304565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cff5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cf69190611c45565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d715760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d689190611c45565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610e5e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e5591906116fc565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eb6578060026000828254610eaa9190611c8f565b92505081905550610f89565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f42578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f3993929190611c0e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fd2578060026000828254039250508190555061101f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161107c91906116fc565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611104959493929190611cc3565b60405160208183030381529060405280519060200120905090565b606060ff60001b831461113c5761113583611468565b90506111c9565b81805461114890611b24565b80601f016020809104026020016040519081016040528092919081815260200182805461117490611b24565b80156111c15780601f10611196576101008083540402835291602001916111c1565b820191906000526020600020905b8154815290600101906020018083116111a457829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156112505760006003859250925092506112fa565b6000600188888888604051600081526020016040526040516112759493929190611d16565b6020604051602081039080840390855afa158015611297573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112eb57600060016000801b935093509350506112fa565b8060008060001b935093509350505b9450945094915050565b6000600381111561131857611317611d5b565b5b82600381111561132b5761132a611d5b565b5b0315611464576001600381111561134557611344611d5b565b5b82600381111561135857611357611d5b565b5b0361138f576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156113a3576113a2611d5b565b5b8260038111156113b6576113b5611d5b565b5b036113fb578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016113f291906116fc565b60405180910390fd5b60038081111561140e5761140d611d5b565b5b82600381111561142157611420611d5b565b5b0361146357806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161145a91906117ba565b60405180910390fd5b5b5050565b60606000611475836114dc565b90506000602067ffffffffffffffff81111561149457611493611b55565b5b6040519080825280601f01601f1916602001820160405280156114c65781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f811115611523576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561156657808201518184015260208101905061154b565b60008484015250505050565b6000601f19601f8301169050919050565b600061158e8261152c565b6115988185611537565b93506115a8818560208601611548565b6115b181611572565b840191505092915050565b600060208201905081810360008301526115d68184611583565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061160e826115e3565b9050919050565b61161e81611603565b811461162957600080fd5b50565b60008135905061163b81611615565b92915050565b6000819050919050565b61165481611641565b811461165f57600080fd5b50565b6000813590506116718161164b565b92915050565b6000806040838503121561168e5761168d6115de565b5b600061169c8582860161162c565b92505060206116ad85828601611662565b9150509250929050565b60008115159050919050565b6116cc816116b7565b82525050565b60006020820190506116e760008301846116c3565b92915050565b6116f681611641565b82525050565b600060208201905061171160008301846116ed565b92915050565b6000806000606084860312156117305761172f6115de565b5b600061173e8682870161162c565b935050602061174f8682870161162c565b925050604061176086828701611662565b9150509250925092565b600060ff82169050919050565b6117808161176a565b82525050565b600060208201905061179b6000830184611777565b92915050565b6000819050919050565b6117b4816117a1565b82525050565b60006020820190506117cf60008301846117ab565b92915050565b6000602082840312156117eb576117ea6115de565b5b60006117f984828501611662565b91505092915050565b600060208284031215611818576118176115de565b5b60006118268482850161162c565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6118648161182f565b82525050565b61187381611603565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6118ae81611641565b82525050565b60006118c083836118a5565b60208301905092915050565b6000602082019050919050565b60006118e482611879565b6118ee8185611884565b93506118f983611895565b8060005b8381101561192a57815161191188826118b4565b975061191c836118cc565b9250506001810190506118fd565b5085935050505092915050565b600060e08201905061194c600083018a61185b565b818103602083015261195e8189611583565b905081810360408301526119728188611583565b905061198160608301876116ed565b61198e608083018661186a565b61199b60a08301856117ab565b81810360c08301526119ad81846118d9565b905098975050505050505050565b6119c48161176a565b81146119cf57600080fd5b50565b6000813590506119e1816119bb565b92915050565b6119f0816117a1565b81146119fb57600080fd5b50565b600081359050611a0d816119e7565b92915050565b600080600080600080600060e0888a031215611a3257611a316115de565b5b6000611a408a828b0161162c565b9750506020611a518a828b0161162c565b9650506040611a628a828b01611662565b9550506060611a738a828b01611662565b9450506080611a848a828b016119d2565b93505060a0611a958a828b016119fe565b92505060c0611aa68a828b016119fe565b91505092959891949750929550565b60008060408385031215611acc57611acb6115de565b5b6000611ada8582860161162c565b9250506020611aeb8582860161162c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b3c57607f821691505b602082108103611b4f57611b4e611af5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050611b9960008301896117ab565b611ba6602083018861186a565b611bb3604083018761186a565b611bc060608301866116ed565b611bcd60808301856116ed565b611bda60a08301846116ed565b979650505050505050565b6000604082019050611bfa600083018561186a565b611c07602083018461186a565b9392505050565b6000606082019050611c23600083018661186a565b611c3060208301856116ed565b611c3d60408301846116ed565b949350505050565b6000602082019050611c5a600083018461186a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c9a82611641565b9150611ca583611641565b9250828201905080821115611cbd57611cbc611c60565b5b92915050565b600060a082019050611cd860008301886117ab565b611ce560208301876117ab565b611cf260408301866117ab565b611cff60608301856116ed565b611d0c608083018461186a565b9695505050505050565b6000608082019050611d2b60008301876117ab565b611d386020830186611777565b611d4560408301856117ab565b611d5260608301846117ab565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212202ebcc3a7ae124c583cc0e5f209c64c78c618b45945d2de61b2c04656a5c0e23364736f6c63430008180033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
